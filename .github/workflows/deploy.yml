name: Deploy Go to EC2 (manual)

on:
  workflow_dispatch:          # ← 纯手动按钮
    inputs:
      command:
        description: 'deploy or restart'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - restart

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o app.bin main.go
          chmod +x app.bin

      - name: Copy binary to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./app.bin
          target: ~/app/release/app.bin
      - name: Manage service on EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            # 1. 目录准备
            timestamp=$(date +%s)
            mkdir -p ~/app/releases/$timestamp
            # 2. 移动文件到时间戳目录
            mv ~/app/releases/app.bin ~/app/releases/$timestamp/app.bin
            # 3. 软链到当前版本
            ln -sfn ~/app/releases/$timestamp/app.bin ~/app/current.bin
            # 4. systemd 服务脚本（一次性）
            sudo tee /etc/systemd/system/goapp.service > /dev/null <<EOF
            [Unit]
            Description=Go App
            After=network.target

            [Service]
            Type=simple
            User=ubuntu
            WorkingDirectory=/home/ubuntu
            ExecStart=/home/ubuntu/app/current.bin
            Restart=always
            RestartSec=5

            [Install]
            WantedBy=multi-user.target
            EOF
            # 5. 启动 or 重启
            if [ "${{ github.event.inputs.command }}" = "restart" ]; then
              sudo systemctl restart goapp
            else
              sudo systemctl daemon-reload
              sudo systemctl enable goapp
              sudo systemctl start goapp
            fi
            # 6. 健康检查
            sleep 3 && curl -f http://localhost:8080 || exit 1

      - name: Show public URL
        run: |
          echo "App should be live at: http://${{ secrets.EC2_HOST }}:8080"
